<!DOCTYPE html>
<meta charset="utf-8">
<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<center> <h2><%- member.occupationTitle %></h2></center>
<div class="row">
  <div class="col-xs-9 col-md-4">
    <div class="row">
      <div class="col-xs-2">
      </div>
      <div class="col-xs-10">
        <h3>  
          Team Member: <%- member.firstName + " " + member.lastName %><br />
          Occupation: <%- member.occupation %><br />
          Wage: $<%- member.wage %><br />
          WageType: <%- member.wageType %><br />
          Location: <%- member.location %><br />
          Occupation <%- member.occupation %>
        </h3>
      </div>
      <div class="col-xs-1">
      </div>
    </div>
  </div>
  <div class="col-xs-9 col-sm-6 col-md-8">
    <svg width="350" height="250"></svg>
  </div>
</div>
<!-- CSS -->
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.title {
  font: 300 78px Helvetica Neue;
  fill: #666;
}

.axis--x path {
  display: none;
}

</style>

<!-- Javascript -->
<script src="https://d3js.org/d3.v4.min.js"></script>
<script
  src="https://code.jquery.com/jquery-3.2.1.js"
  integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE="
  crossorigin="anonymous"></script>
<script>
var memberId = "<%= member._id %>";
var svg = d3.select("svg"),
    margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
    y = d3.scaleLinear().rangeRound([height, 0]);

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var request = $.ajax({
  url: "http://localhost:3000/api/member/" + memberId + "/publicwages",
  method: "GET",
  dataType: "html"
});

request.done(function( msg ) {
  var object = JSON.parse(msg);
  var wageArray = object.occupation;
  var min = d3.min(wageArray, function(d) { return d.mean });
  x.domain(wageArray.map(function(d) { return d.periodyear; }));
  y.domain([min, d3.max(wageArray, function(d) { return d.mean; })]);

  g.append("g")
      .attr("class", "axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));

  g.append("g")
      .attr("class", "axis axis--y")
      .call(d3.axisLeft(y).ticks(10, "$"))
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", "0.71em")
      .attr("text-anchor", "end")
      .text("Frequency");

  g.selectAll(".bar")
    .data(wageArray)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.periodyear); })
      .attr("y", function(d) { return y(d.mean); })
      .attr("width", x.bandwidth())
      .attr("height", function(d) { return height - y(d.mean); });

});
</script>